{"ast":null,"code":"var _jsxFileName = \"/Users/akrik/Desktop/react-front-to-back/feedback-app/src/components/FeedbackStats.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport FeedbackContext from \"../context/FeedbackContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackStats(_ref) {\n  _s();\n\n  let {} = _ref;\n  const {\n    feedback\n  } = useContext(FeedbackContext);\n  let average = feedback.reduce((acc, cur) => {\n    return acc + cur.rating;\n  }, 0) / feedback.length;\n  average = average.toFixed(1).replace(/[.,]0$/, \"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedbac-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [feedback.length, \" Reviews\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Average Rating: \", isNaN(average) ? 0 : average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackStats, \"RNPzS9Jfq5OTQN+7+1vdg6m3Kwc=\");\n\n_c = FeedbackStats;\nFeedbackStats.propTypes = {\n  feedback: PropTypes.array.isRequired\n};\nexport default FeedbackStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackStats\");","map":{"version":3,"names":["React","PropTypes","useContext","FeedbackContext","FeedbackStats","feedback","average","reduce","acc","cur","rating","length","toFixed","replace","isNaN","propTypes","array","isRequired"],"sources":["/Users/akrik/Desktop/react-front-to-back/feedback-app/src/components/FeedbackStats.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport FeedbackContext from \"../context/FeedbackContext\";\n\nfunction FeedbackStats({}) {\n  const { feedback } = useContext(FeedbackContext);\n\n  let average =\n    feedback.reduce((acc, cur) => {\n      return acc + cur.rating;\n    }, 0) / feedback.length;\n\n  average = average.toFixed(1).replace(/[.,]0$/, \"\");\n\n  return (\n    <div className=\"feedbac-stats\">\n      <h4>{feedback.length} Reviews</h4>\n      <h4>Average Rating: {isNaN(average) ? 0 : average}</h4>\n    </div>\n  );\n}\n\nFeedbackStats.propTypes = { feedback: PropTypes.array.isRequired };\n\nexport default FeedbackStats;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;;AAEA,SAASC,aAAT,OAA2B;EAAA;;EAAA,IAAJ,EAAI;EACzB,MAAM;IAAEC;EAAF,IAAeH,UAAU,CAACC,eAAD,CAA/B;EAEA,IAAIG,OAAO,GACTD,QAAQ,CAACE,MAAT,CAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;IAC5B,OAAOD,GAAG,GAAGC,GAAG,CAACC,MAAjB;EACD,CAFD,EAEG,CAFH,IAEQL,QAAQ,CAACM,MAHnB;EAKAL,OAAO,GAAGA,OAAO,CAACM,OAAR,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,QAA3B,EAAqC,EAArC,CAAV;EAEA,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,wBACE;MAAA,WAAKR,QAAQ,CAACM,MAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,+BAAqBG,KAAK,CAACR,OAAD,CAAL,GAAiB,CAAjB,GAAqBA,OAA1C;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAhBQF,a;;KAAAA,a;AAkBTA,aAAa,CAACW,SAAd,GAA0B;EAAEV,QAAQ,EAAEJ,SAAS,CAACe,KAAV,CAAgBC;AAA5B,CAA1B;AAEA,eAAeb,aAAf"},"metadata":{},"sourceType":"module"}